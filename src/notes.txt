================================
Course Content:
================================
Component and Databinding
Directive
Services and Dependecy injections
Routing
Observables
Forms
Pipes
Http
Authentication
Optimization and NgModules
Deployment
Animations and Testing
======================================================================
Docs+ Google
======================================================================
Typescript:
It is superset of Javascript. More features then javascript, eg Types,Classes,Interfaces etc
Typescript Compiled to Javascript
========================================================================================
Sections 2:
Basis:
How angular apps gets loaded?

index.html -> calls app component selector i.e; <app-root></app-root>
The bundle of the all the JS files in done.
In main.ts bootstraps the AppModule.
AppModules then bootstraps the AppComponent

========================================================================================
Component It is key fetaure of angular

Making an angular sample app
npm install -g @angular/cli   (If Angular CLI is not installed)
ng new my-dream-app
cd my-dream-app
ng serve

=======================================================================================
Module in Angular refers to a place where you can group the 
components, directives, pipes, and services, which are related to the application.

In case you are developing a website, the header, footer, left, center and the right section 
become part of a module.

To define module, we can use the NgModule. When you create a new project using the Angular â€“cli command,
 the ngmodule is created in the app.module.ts file by default
=======================================================================================
Data binding in Angular :

1) Output Data (from Typescript[Business Logic] to Tempalate[HTML])
Ex: String interpolation {{data}}
Property Binding : [property] = "data"

2) Event Binding(React to User Event) :
(event) = "expression"

3) Combination of two way binding :
[(ngModel)]="data"

Combination of property and event based binding 


Important: For Two-Way-Binding (covered in the next lecture) to work, you need to enable the ngModel  
directive. This is done by adding the FormsModule  to the imports[]  array in the AppModule.

You then also need to add the import from @angular/forms  in the app.module.ts file:

import { FormsModule } from '@angular/forms'; 
=======================================================================================
Directive
.......................................................................................
Directive are instruction in DOM!!
Directive in Angular is a js class, which is declared as @directive.
We have 3 types of directives  in Angular. The directive are listed  below:

1) Component Directive =>  Main class having thr details of how the component should be processed,
instantained an used in runtime
2) Structural  Directive =>  Basically this type of directive deals with the manupulating the DOM
elements. Structural  directive have sign * before  it.
For example :* ngIf and *ngFor
3) Attribute Directive => Basically deals with changing the look and behavious of DOM element
=====================================================================================================
Property and Event Bidning:

Property and Event handling can be used in the following:
1) HTML elements => Native Properties and Events
2) Directives => Custom Properties and Events
3) Components => Custom Properties and Events

===================================================================================================
Binding to Custom Proerties(Parent child, sibling communication):
You can pass values from a parent to child to [property binding] in the parent and @Input() in the child
You can pass values from a child to parent using(event binding) in the parent and @Output() in the child

A direct parent/child relationship of two components is established by the fact that the selector
of the child component is placed somwehere in the template of the parent component

Since CockpitComponent and ServerElementComponent are siblings,they have to communicate via their Parent
(AppComponent as long as we dont use a service for communication)





